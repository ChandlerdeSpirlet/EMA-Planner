<% set title = 'Sign Up' %>
<% set admin = false %>
<% extends 'base.ejs' %>

<% block content %>

<div class="sign-up">
    <label class="sign-up-product">
        <% product.name %>
    </label>
    <h2>Sign up for <% plan.name %> &mdash; <%plan.amount %> /
        <% if (plan.interval_count > 1){ %>
            <% plan.interval_count %> <% plan.interval %>s

        <% } else { %>
            <% plan.interval %>
        <% } %>
    </h2>
    <% if (success) { %>
        <div>
            <p>Your payment was successful. Congrats, you've successfully signed up!</p>
        </div>
    <% } else if (error) { %>
        <div>
            <p>Your payment was unsuccessful. Please try again.</p>
        </div>
    <% } else { %>
        <div class="sign-up-container">
            <form action="/home/processPayment" method="POST" id="payment-form">
                <input type="hidden" value="<% product.name %>" name="productName"/>
                <input type="hidden" value="<% plan.id %>" name="planID"/>
                <input type="hidden" value="<% plan.amount %>" name="planAmount"/>
                <input type="hidden" value="<% plan.name %>" name="planName"/>
                <input type="hidden" value="<% plan.interval %>" name="planInterval"/>
                <input type="hidden" value="<% plan.interval_count %>" name="planIntervalCount"/>

                <label>
                    Email Address
                </label>
                <input placeholder="Your Email Address" name="customerEmail"/>
                <div class="form-row">
                    <label for="card-element">
                        Credit or debit card
                    </label>
                    <div id="card-element">

                    </div>

                    <div id="card-errors" role="alert"></div>
                </div>
                
                <input class="btn" type="submit" value="Pay <% plan.amount %>" />
            </form>
        </div> 
    <% } %>
</div>

<script>
    if (document.getElementById('card-element')) {
        var stripe = Stripe('pk_test_51H75ScKv0edLDEqJAZ1I7MJA1JHPR2LDD4f6y1hmM636nzq8D6Cpc3SoDkIY1ZapQS1GVWBAhwHLpFRoIYuxdVqo00yokwK8lD');
        var elements = stripe.elements();

        var style = {
            base: {
                fontSize: '16px', '::placeholder': {color: "#aab7c4"},
                fontFamily: '-apple-system, BlinkMacSystemFont, sans-serif',
                fontSmoothing: 'antialiased',
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        var card = elements.create('card', {style: syle});

        card.mount('#card-element');

        card.addEventListener('change', event => {
            var displayError = document.getElementById('card-errors');

            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        var form = document.getElementById('payment-form');

        form.addEventListener('submit', function(event){
            event.preventDefault();

            stripe.createToken(card).then(function(result){
                if (result.error) {
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    stripeTokenHandler(result.token);
                }
            })
        });
    }

    function stripeTokenHandler(token){
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);
        form.submit();
    }
</script>

<style>
    /* This CSS is taken from the Stripe Elements Quickstart Guide (https://stripe.com/docs/stripe-js/elements/quickstart). 
     * It is used to style the container, not the actual inputs inside */
    .StripeElement {
        box-sizing: border-box;
        height: 40px;
        padding: 10px 12px;
        border: 1px solid transparent;
        border-radius: 4px;
        background-color: white;
        box-shadow: 0 1px 3px 0 #e6ebf1;
        -webkit-transition: box-shadow 150ms ease;
        transition: box-shadow 150ms ease;
    }

    .StripeElement--focus {
        box-shadow: 0 1px 3px 0 #cfd7df;
    }

    .StripeElement--invalid {
        border-color: #fa755a;
    }

    .StripeElement--webkit-autofill {
        background-color: #fefde5 !important;
    }
</style>

<% endblock %>